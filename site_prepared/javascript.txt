Mono delivers robust and scalable JavaScript front-end, back-end, embedded, desktop, mobile, and hybrid applications.
JavaScript has become the de-facto standard programming language of the Web.
Some of us have been using it for more than 20 years. It is open, standardized, and well-suited to the Web with its dynamic nature and tight integration with the DOM.
Our journey with JavaScript has started by writing simple client-side scripts in vanilla JS; we have soon adopted jQuery and AJAX, and although they were revolutionary at that time, they were giving us only a taste of the things to come.
The Big 3: React, Angular and Vue
Along with other front-end technologies, like CSS frameworks including Bootstrap and Materialize, we started to work with different frameworks, dating back to Backbone and Knockout. Now our client-side work is usually done in one of the big 3 frameworks, including React, Angular and Vue.js.

Our back-end JavaScript work relies on the power of Node.js, due to its sheer versatility, community support and the huge amount of frameworks built on top of it. One of the most frequently used tools with Node is Express.js, a lightweight routing, and middleware framework.
Our story does not stop there. We have used JavaScript for building cross-platform desktop apps with Electron and React Native for cross-platform mobile apps.

We have vast experience with JavaScript and can use it to build flexible, robust and scalable front-end, back-end, embedded, desktop, mobile, and hybrid applications.
Our JavaScript stack: jQuery, Kendo UI, Typescript, Babel, Backbone.js, Angular, React, Vue.js, Polymer, Webpack, Grunt, Gulp, Bower, Yeoman, Yarn, Swagger, Jasmine, Mocha, PhantomJS, Node.js, Express.js, Chai, Sinon.js, Passport.js, Socket.io, Meteor.js
